stages:
  - build
  - deploy

# services:
#   - docker:dind

# variables:
#   DOCKER_IMAGE_NAME: "$ACR_USERNAME.azurecr.io/$DOCKER_IMAGE"
#   DOCKER_IMAGE_TAG: "latest"

# build:
#   stage: build
#   image: docker:latest
#   script:
#     - docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .
#     - docker login $REGISTRY_NAME.azurecr.io -u $ACR_USERNAME -p $ACR_PASSWORD
#     - docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
#     - echo "Application successfully deployed."


# terraform_setup:
#   stage: deploy
#   image:
#     name: hashicorp/terraform:light
#     entrypoint: [""]

#   before_script:
#     - apk add --no-cache --update python3 py3-pip
#     - apk add --no-cache --update --virtual=build gcc musl-dev python3-dev libffi-dev openssl-dev cargo make && pip3 install --no-cache-dir --prefer-binary azure-cli && apk del build
#     - az login --service-principal --username "$AZURE_CLIENT_ID" --password "$AZURE_CLIENT_SECRET" --tenant "$AZURE_TENANT_ID"
#     - terraform --version
#     - terraform init

#   script:
#     - terraform validate
#     - terraform plan 
#     - terraform apply -auto-approve
#     - terraform destroy -auto-approve


#   only:
#     - main
